# message-bus
---
apiVersion: v1
kind: Service
metadata:
  name: message-bus
  labels:
    app: message-bus
spec:
  ports:
  - name: message-bus
    port: 5672
  - name: message-bus-management
    port: 15672
  selector:
    app: message-bus
    tier: rabbitmq
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: message-bus
  labels:
    app: message-bus
spec:
  selector:
    matchLabels:
      app: message-bus
      tier: rabbitmq
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: message-bus
        tier: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        ports:
        - containerPort: 5672
        - containerPort: 15672

# customer-service
---
apiVersion: v1
kind: Service
metadata:
  name: customer-service
  labels:
    app: customer-service
spec:
  ports:
  - port: 5000
  selector:
    app: customer-service
    tier: api
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-service
  labels:
    app: customer-service
  annotations:
    traefik.backend: customer-service
    traefik.enable: "false"
    traefik.frontend.rule: PathPrefix:/customers/
    traefik.port: "5000"
spec:
  selector:
    matchLabels:
      app: customer-service
      tier: api
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: customer-service
        tier: api
    spec:
      containers:
      - name: customer-service
        image: aklearning/eng-lab-customer-service
        env:
        - name: PORT
          value: "5000"
        ports:
        - containerPort: 5000

# account-service
---
apiVersion: v1
kind: Service
metadata:
  name: account-service-db
  labels:
    app: account-service
spec:
  ports:
  - port: 5432
  selector:
    app: account-service
    tier: postgresql
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-service-db
  labels:
    app: account-service
spec:
  selector:
    matchLabels:
      app: account-service
      tier: postgresql
  replicas: 1
  template:
    metadata:
      labels:
        app: account-service
        tier: postgresql
    spec:
      containers:
      - image: postgres:latest
        name: postgresql
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: account-service
        - name: POSTGRES_PASSWORD
          value: guest
        - name: POSTGRES_USER
          value: guest

---
apiVersion: v1
kind: Service
metadata:
  name: account-service
  labels:
    app: account-service
spec:
  ports:
  - port: 5000
  selector:
    app: account-service
    tier: api
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-service
  labels:
    app: account-service
    tier: api
  annotations:
    traefik.backend: account-service
    traefik.enable: "true"
    traefik.frontend.rule: PathPrefix:/accounts/
    traefik.port: "5000"
spec:
  selector:
    matchLabels:
      app: account-service
      tier: api
  replicas: 1
  template:
    metadata:
      labels:
        app: account-service
        tier: api
    spec:
      containers:
      - name: account-service
        image: aklearning/eng-lab-account-service
        env:
        - name: CUSTOMER_SERVICE_URL
          value: http://customer-service:5000
        - name: DB_HOST
          value: account-service-db
        - name: DB_PASSWORD
          value: guest
        - name: DB_PORT
          value: "5432"
        - name: DB_USERNAME
          value: guest
        - name: PORT
          value: "5000"
        ports:
        - containerPort: 5000
      restartPolicy: Always

# transaction-service
---
apiVersion: v1
kind: Service
metadata:
  name: transaction-service-db
  labels:
    app: transaction-service
spec:
  ports:
  - port: 5432
  selector:
    app: transaction-service
    tier: postgresql
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transaction-service-db
  labels:
    app: transaction-service
spec:
  selector:
    matchLabels:
      app: transaction-service
      tier: postgresql
  replicas: 1
  template:
    metadata:
      labels:
        app: transaction-service
        tier: postgresql
    spec:
      containers:
      - name: postgresql
        image: postgres:latest
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: transaction-service
        - name: POSTGRES_PASSWORD
          value: guest
        - name: POSTGRES_USER
          value: guest
---
apiVersion: v1
kind: Service
metadata:
  name: transaction-service
  labels:
    app: transaction-service
spec:
  ports:
  - port: 5000
  selector:
    app: transaction-service
    tier: api
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transaction-service
  labels:
    app: transaction-service
spec:
  selector:
    matchLabels:
      app: transaction-service
      tier: api
  replicas: 1
  template:
    metadata:
      labels:
        app: transaction-service
        tier: api
    spec:
      containers:
      - image: aklearning/eng-lab-transaction-service
        name: transaction-service
        ports:
        - containerPort: 5000
        env:
        - name: ACCOUNT_SERVICE_URL
          value: http://account-service:5000
        - name: DB_HOST
          value: transaction-service-db
        - name: DB_PASSWORD
          value: guest
        - name: DB_PORT
          value: "5432"
        - name: DB_USERNAME
          value: guest
        - name: PORT
          value: "5000"
        - name: RABBITMQ_HOST
          value: message-bus
        - name: RABBITMQ_PORT
          value: "5672"

# balance-service
---
apiVersion: v1
kind: Service
metadata:
  name: balance-service-store
  labels:
    app: balance-service
spec:
  ports:
  - port: 6379
  selector:
    app: balance-service
    tier: redis
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: balance-service-store
  labels:
    app: balance-service
spec:
  selector:
    matchLabels:
      app: balance-service
      tier: redis
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: balance-service
        tier: redis
    spec:
      containers:
      - image: redis
        name: redis
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: balance-service
  labels:
    app: balance-service
spec:
  ports:
  - port: 5000
  selector:
    app: balance-service
    tier: api
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: balance-service
  labels:
    app: balance-service
  annotations:
    traefik.backend: balance-app
    traefik.enable: "true"
    traefik.frontend.rule: PathPrefix:/balance/
    traefik.port: "5000"
spec:
  selector:
    matchLabels:
      app: balance-service
      tier: api
  replicas: 1
  template:
    metadata:
      labels:
        app: balance-service
        tier: api
    spec:
      containers:
      - image: aklearning/eng-lab-balance-service
        name: balance-service
        ports:
        - containerPort: 5000
        env:
        - name: BALANCE_NAMESPACE
          value: balance
        - name: PORT
          value: "5000"
        - name: REDIS_URL
          value: redis://balance-service-store:6379

